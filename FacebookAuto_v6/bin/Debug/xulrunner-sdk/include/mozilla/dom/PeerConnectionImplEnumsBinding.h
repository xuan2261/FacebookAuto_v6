/* THIS FILE IS AUTOGENERATED FROM PeerConnectionImplEnums.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_PeerConnectionImplEnumsBinding_h
#define mozilla_dom_PeerConnectionImplEnumsBinding_h

#include "js/RootingAPI.h"
#include "jspubtd.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/Nullable.h"

namespace mozilla {
namespace dom {

struct NativePropertyHooks;
class ProtoAndIfaceCache;

} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {

enum class PCImplSignalingState : uint32_t {
  SignalingInvalid,
  SignalingStable,
  SignalingHaveLocalOffer,
  SignalingHaveRemoteOffer,
  SignalingHaveLocalPranswer,
  SignalingHaveRemotePranswer,
  SignalingClosed,
  EndGuard_
};

namespace PCImplSignalingStateValues {
extern const EnumEntry strings[8];
} // namespace PCImplSignalingStateValues


enum class PCImplSipccState : uint32_t {
  Idle,
  Starting,
  Started,
  EndGuard_
};

namespace PCImplSipccStateValues {
extern const EnumEntry strings[4];
} // namespace PCImplSipccStateValues


enum class PCImplIceConnectionState : uint32_t {
  New,
  Checking,
  Connected,
  Completed,
  Failed,
  Disconnected,
  Closed,
  EndGuard_
};

namespace PCImplIceConnectionStateValues {
extern const EnumEntry strings[8];
} // namespace PCImplIceConnectionStateValues


enum class PCImplIceGatheringState : uint32_t {
  New,
  Gathering,
  Complete,
  EndGuard_
};

namespace PCImplIceGatheringStateValues {
extern const EnumEntry strings[4];
} // namespace PCImplIceGatheringStateValues


} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_PeerConnectionImplEnumsBinding_h
